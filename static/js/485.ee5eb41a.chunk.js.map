{"version":3,"file":"static/js/485.ee5eb41a.chunk.js","mappings":"+RAIaA,EAAQC,EAAAA,EAAAA,GAAH,sEAKLC,EAAKD,EAAAA,EAAAA,GAAH,0GAQFE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6J,SC0BvB,EAlCa,WAEX,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAE2BC,EAAAA,EAAAA,MAF3B,OAEUC,EAFV,OAGIL,GAAW,OAAIK,EAASN,UAH5B,gDAKIO,QAAQC,IAAR,MALJ,0DAFc,uBAAC,WAAD,wBAWdC,EACD,GAAE,KAGD,iCACE,SAACf,EAAD,8BAEA,SAACE,EAAD,UACGI,EAAQU,KAAI,SAAAC,GAAM,OACjB,yBACE,SAACd,EAAD,CAAYe,GAAE,kBAAaD,EAAOE,IAAMC,MAAO,CAACC,KAAMb,GAAtD,SAAkES,EAAOK,SADlEL,EAAOE,GADC,QAQ1B,C,uKCvCDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAINjB,EAAW,mCAAG,oGACFY,EAAAA,EAAAA,IAAU,mCAAoCC,GAD5C,cACnBK,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAc,mCAAG,WAAOC,GAAP,uFACLT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,mBAA8CR,GADzC,cACtBK,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdG,EAAmB,mCAAG,WAAOD,EAAQE,GAAf,uFACVX,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAA+BE,EAA/B,mBAAsDV,GAD5C,cAC3BK,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,wDAKnBK,EAAc,mCAAG,WAAOC,GAAP,uFACLb,EAAAA,EAAAA,IAAA,8BAAiCa,EAAjC,8CAAoFZ,GAD/E,cACtBK,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx","service/MovieAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const Title = styled.h1`\n  margin-bottom: 10px;\n  margin-left: 15px;\n`\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  margin-left: 30px;\n`\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  font-weight: 600;\n  \n  text-decoration: none;\n  color: #363434;\n\n  &:hover {\n    color: #5d6f85;\n  }\n\n`","import { useEffect, useState } from \"react\"\n\n// API / React router\nimport { getTrending } from \"service/MovieAPI\"\nimport { useLocation } from \"react-router-dom\"\n\n// emotion\nimport { Title, Ul, LinkStyled } from \"./Home.styled\"\n\nconst Home = () => {\n\n  const [results, setResults] = useState([])\n  const location = useLocation()\n\n  useEffect(() => {\n\n    async function fetchAPI() {\n      try {\n        const response = await getTrending()\n        setResults([...response.results])\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    fetchAPI()\n  }, [])\n\n  return (\n    <>\n      <Title>Trending Today</Title>\n\n      <Ul>\n        {results.map(result => (\n          <li key={result.id}>\n            <LinkStyled to={`/movies/${result.id}`} state={{from: location}}>{result.title}</LinkStyled>\n          </li>\n        ))}\n      </Ul>\n    </>\n  )\n}\n\nexport default Home","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMDA3OWJhZDEwZWQxODQ1M2Y2MjZkNWFlYTk4YWI3NCIsInN1YiI6IjY0ZTBiNjBkYWFlYzcxMDNmOTk4MDA4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cZ71jAC2kXZRjWif2pQkTYjmwqMcqAvb4d3kK3-HrX8'\n  }\n};\n\nexport const getTrending = async() => {\n  const responce = await axios.get('/trending/all/day?language=en-US', options)\n  return responce.data\n}\n\nexport const getMovieDetail = async (movieId) => {\n  const responce = await axios.get(`/movie/${movieId}?language=en-US`, options)\n  return responce.data\n}\n\nexport const getMovieInformation = async (movieId,type) => {\n  const responce = await axios.get(`/movie/${movieId}/${type}?language=en-US`, options)\n  return responce.data\n}\n\nexport const getSearchMovie = async (value) => {\n  const responce = await axios.get(`/search/movie?query=${value}&include_adult=false&language=en-US&page=1`, options)\n  return responce.data\n}"],"names":["Title","styled","Ul","LinkStyled","Link","useState","results","setResults","location","useLocation","useEffect","getTrending","response","console","log","fetchAPI","map","result","to","id","state","from","title","axios","options","method","headers","accept","Authorization","responce","data","getMovieDetail","movieId","getMovieInformation","type","getSearchMovie","value"],"sourceRoot":""}