{"version":3,"file":"static/js/691.6e58839a.chunk.js","mappings":"+RAKaA,EAAYC,EAAAA,EAAAA,IAAH,+CAITC,EAAKD,EAAAA,EAAAA,GAAH,yGAQFE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6J,kBCkEvB,EAzEe,WAAO,IAAD,EAEnB,GAAuCI,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,GA+B3C,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCAMd,8GAG2BC,EAAAA,EAAAA,IAAeH,GAH1C,OAGUI,EAHV,OAIIP,GAAU,OAAIO,EAASC,UAJ3B,gDAMIC,QAAQC,IAAR,MANJ,0DANc,sBAETP,GAFS,mCAgBdQ,EACD,GAAE,CAACR,KAGF,iCACE,UAAC,KAAD,YACE,uCACE,iBAAMS,KAAK,cAAcC,QAAQ,8BACjC,iBAAMC,SAAS,SAASD,QAAQ,iEAChC,iBAAMC,SAAS,WAAWD,QAAQ,oBAClC,iBAAMC,SAAS,eAAeD,QAAQ,YACtC,iBAAMC,SAAS,UAAUD,QAAQ,aACjC,iBAAMC,SAAS,iBAAiBD,QAAQ,sGACxC,iBAAMC,SAAS,YAAYD,QAAQ,WACnC,iBAAMC,SAAS,WAAWD,QAAQ,yNAClC,iBAAME,IAAI,YAAYC,KAAK,oEAG/B,UAAC1B,EAAD,YAEE,kBAAM2B,SA9CW,SAAAC,GAGrB,GAFAA,EAAEC,kBAEGD,EAAEE,OAAOC,SAASC,MAAMC,MAC3B,OAAO1B,EAAgB,CAAC,GAG1BA,EAAgB,CAACM,MAAOe,EAAEE,OAAOC,SAASC,MAAMC,OACjD,EAsCK,WACE,kBAAOC,KAAK,OAAOZ,KAAK,WAExB,mBAAQY,KAAK,SAAb,wBAGF,SAAChC,EAAD,UACGO,EAAO0B,KAAI,SAAAC,GAAK,OACf,yBAEE,SAACjC,EAAD,CAAYkC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAM7B,GAArD,SAAiEyB,EAAMK,SAFhEL,EAAME,GADA,WAU1B,C,uKC/EDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAINC,EAAW,mCAAG,oGACFN,EAAAA,EAAAA,IAAU,mCAAoCC,GAD5C,cACnBM,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAc,mCAAG,WAAOC,GAAP,uFACLV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,mBAA8CT,GADzC,cACtBM,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdG,EAAmB,mCAAG,WAAOD,EAAQlB,GAAf,uFACVQ,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAA+BlB,EAA/B,mBAAsDS,GAD5C,cAC3BM,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,wDAKnBlC,EAAc,mCAAG,WAAOiB,GAAP,uFACLS,EAAAA,EAAAA,IAAA,8BAAiCT,EAAjC,8CAAoFU,GAD/E,cACtBM,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","service/MovieAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\n// react router\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Container = styled.div`\r\n  padding-left: 20px;\r\n`\r\n\r\nexport const Ul = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n\r\n  margin-top: 30px;\r\n`\r\n\r\nexport const LinkStyled = styled(Link)`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  \r\n  text-decoration: none;\r\n  color: #363434;\r\n\r\n  &:hover {\r\n    color: #5d6f85;\r\n  }\r\n\r\n`","import { useEffect, useState } from \"react\"\r\n\r\n// api /react router\r\nimport { getSearchMovie } from \"service/MovieAPI\"\r\nimport { useLocation, useSearchParams } from \"react-router-dom\"\r\n\r\n// emotion\r\nimport { Container, Ul, LinkStyled } from \"./Movies.styled\"\r\nimport { Helmet } from \"react-helmet-async\"\r\n\r\nconst Movies = () => {\r\n\r\n  const [searchParams,setSearchParams] = useSearchParams()\r\n  const [movies, setMovies] = useState([])\r\n  \r\n  const location = useLocation()\r\n  const query = searchParams.get(\"query\") ?? ''\r\n\r\n  const handleOnSubmit = e => {\r\n    e.preventDefault()\r\n    \r\n    if (!e.target.elements.input.value) {\r\n      return setSearchParams({})\r\n    }\r\n\r\n    setSearchParams({query: e.target.elements.input.value})\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (!query) {\r\n      return\r\n    }\r\n\r\n    async function fetchAPI() {\r\n\r\n      try {\r\n        const response = await getSearchMovie(query)\r\n        setMovies([...response.results])\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    fetchAPI()\r\n  }, [query])\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Movies</title>\r\n          <meta name=\"description\" content=\"Movies to enjoy your day\" />\r\n          <meta property=\"og:url\" content=\"https://a-gulinsky.github.io/goit-react-hw-05-movies/movies\" />\r\n          <meta property=\"og:title\" content=\"Title | Movies\" />\r\n          <meta property=\"og:site_name\" content=\"MOVIES\" />\r\n          <meta property=\"og:type\" content=\"article\" />\r\n          <meta property=\"og:description\" content=\"Description: 1. Best Movies Shop in Kiev 2. Best Movies Shop in Kiev 3. Best Movies Shop in Kiev\" />\r\n          <meta property=\"og:locale\" content=\"en_US\" />\r\n          <meta property=\"og:image\" content=\"https://img.freepik.com/free-photo/fresh-natural-green-schefflera-arboricola-background_53876-153311.jpg?w=996&t=st=1701474143~exp=1701474743~hmac=50682caf3fdfd630dff9ea401437b10bd57f30234e16b1f53a14a718a5ea0498\" />\r\n          <link rel=\"canonical\" href=\"https://a-gulinsky.github.io/goit-react-hw-05-movies/movies\" />\r\n      </Helmet>\r\n\r\n      <Container>\r\n\r\n        <form onSubmit={handleOnSubmit}>\r\n          <input type=\"text\" name=\"input\" />\r\n        \r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n\r\n        <Ul>\r\n          {movies.map(movie => (\r\n            <li key={movie.id}>\r\n\r\n              <LinkStyled to={`/movies/${movie.id}`} state={{from: location}}>{movie.title}</LinkStyled>\r\n            </li>\r\n          ))}\r\n        </Ul>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Movies","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\r\n\r\nconst options = {\r\n  method: 'GET',\r\n  headers: {\r\n    accept: 'application/json',\r\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMDA3OWJhZDEwZWQxODQ1M2Y2MjZkNWFlYTk4YWI3NCIsInN1YiI6IjY0ZTBiNjBkYWFlYzcxMDNmOTk4MDA4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cZ71jAC2kXZRjWif2pQkTYjmwqMcqAvb4d3kK3-HrX8'\r\n  }\r\n};\r\n\r\nexport const getTrending = async() => {\r\n  const responce = await axios.get('/trending/all/day?language=en-US', options)\r\n  return responce.data\r\n}\r\n\r\nexport const getMovieDetail = async (movieId) => {\r\n  const responce = await axios.get(`/movie/${movieId}?language=en-US`, options)\r\n  return responce.data\r\n}\r\n\r\nexport const getMovieInformation = async (movieId,type) => {\r\n  const responce = await axios.get(`/movie/${movieId}/${type}?language=en-US`, options)\r\n  return responce.data\r\n}\r\n\r\nexport const getSearchMovie = async (value) => {\r\n  const responce = await axios.get(`/search/movie?query=${value}&include_adult=false&language=en-US&page=1`, options)\r\n  return responce.data\r\n}"],"names":["Container","styled","Ul","LinkStyled","Link","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","location","useLocation","query","get","useEffect","getSearchMovie","response","results","console","log","fetchAPI","name","content","property","rel","href","onSubmit","e","preventDefault","target","elements","input","value","type","map","movie","to","id","state","from","title","axios","options","method","headers","accept","Authorization","getTrending","responce","data","getMovieDetail","movieId","getMovieInformation"],"sourceRoot":""}