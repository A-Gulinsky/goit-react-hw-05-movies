{"version":3,"file":"static/js/691.5866ad38.chunk.js","mappings":"+RAKaA,EAAYC,EAAAA,EAAAA,IAAH,+CAITC,EAAKD,EAAAA,EAAAA,GAAH,yGAQFE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6J,kBCqEvB,EA5Ee,WAAO,IAAD,EAEnB,GAAuCI,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,GA+B3C,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCAMd,8GAG2BC,EAAAA,EAAAA,IAAeH,GAH1C,OAGUI,EAHV,OAIIP,GAAU,OAAIO,EAASC,UAJ3B,gDAMIC,QAAQC,IAAR,MANJ,0DANc,sBAETP,GAFS,mCAgBdQ,EACD,GAAE,CAACR,KAGF,iCAWE,UAAC,KAAD,YACI,uCACA,iBAAMS,KAAK,cAAcC,QAAQ,8BACjC,iBAAMC,IAAI,YAAYC,KAAK,gBAG/B,UAACzB,EAAD,YAEE,kBAAM0B,SAjDW,SAAAC,GAGrB,GAFAA,EAAEC,kBAEGD,EAAEE,OAAOC,SAASC,MAAMC,MAC3B,OAAOzB,EAAgB,CAAC,GAG1BA,EAAgB,CAACM,MAAOc,EAAEE,OAAOC,SAASC,MAAMC,OACjD,EAyCK,WACE,kBAAOC,KAAK,OAAOX,KAAK,WAExB,mBAAQW,KAAK,SAAb,wBAGF,SAAC/B,EAAD,UACGO,EAAOyB,KAAI,SAAAC,GAAK,OACf,yBAEE,SAAChC,EAAD,CAAYiC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAM5B,GAArD,SAAiEwB,EAAMK,SAFhEL,EAAME,GADA,WAU1B,C,uKClFDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAINC,EAAW,mCAAG,oGACFN,EAAAA,EAAAA,IAAU,mCAAoCC,GAD5C,cACnBM,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAc,mCAAG,WAAOC,GAAP,uFACLV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,mBAA8CT,GADzC,cACtBM,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdG,EAAmB,mCAAG,WAAOD,EAAQlB,GAAf,uFACVQ,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAA+BlB,EAA/B,mBAAsDS,GAD5C,cAC3BM,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,wDAKnBjC,EAAc,mCAAG,WAAOgB,GAAP,uFACLS,EAAAA,EAAAA,IAAA,8BAAiCT,EAAjC,8CAAoFU,GAD/E,cACtBM,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","service/MovieAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\n// react router\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  padding-left: 20px;\n`\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n\n  margin-top: 30px;\n`\n\nexport const LinkStyled = styled(Link)`\n  font-size: 18px;\n  font-weight: 600;\n  \n  text-decoration: none;\n  color: #363434;\n\n  &:hover {\n    color: #5d6f85;\n  }\n\n`","import { useEffect, useState } from \"react\"\n\n// api /react router\nimport { getSearchMovie } from \"service/MovieAPI\"\nimport { useLocation, useSearchParams } from \"react-router-dom\"\n\n// emotion\nimport { Container, Ul, LinkStyled } from \"./Movies.styled\"\nimport { Helmet } from \"react-helmet-async\"\n\nconst Movies = () => {\n\n  const [searchParams,setSearchParams] = useSearchParams()\n  const [movies, setMovies] = useState([])\n  \n  const location = useLocation()\n  const query = searchParams.get(\"query\") ?? ''\n\n  const handleOnSubmit = e => {\n    e.preventDefault()\n    \n    if (!e.target.elements.input.value) {\n      return setSearchParams({})\n    }\n\n    setSearchParams({query: e.target.elements.input.value})\n  }\n\n  useEffect(() => {\n\n    if (!query) {\n      return\n    }\n\n    async function fetchAPI() {\n\n      try {\n        const response = await getSearchMovie(query)\n        setMovies([...response.results])\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    fetchAPI()\n  }, [query])\n\n  return (\n    <>\n        {/* <title>Title | Movie Page</title>\n        <meta property=\"og:url\" content=\"https://a-gulinsky.github.io/goit-react-hw-05-movies/movies\" />\n        <meta property=\"og:title\" content=\"Title | Movie Page\" />\n        <meta property=\"og:site_name\" content=\"Movies\" />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:description\" content=\"Description: Best Movie in Ukraine 2. Best Movie in Ukraine 3. Best Movie in Ukraine\" />\n        <meta property=\"og:locale\" content=\"en_US\" />\n        <meta property=\"og:image\" content=\"https://img.freepik.com/free-photo/fresh-natural-green-schefflera-arboricola-background_53876-153311.jpg?w=996&t=st=1701474143~exp=1701474743~hmac=50682caf3fdfd630dff9ea401437b10bd57f30234e16b1f53a14a718a5ea0498\" />\n        <meta name=\"description\" content=\"Description: Best Movie in Ukraine 2. Best Movie in Ukraine 3. Best Movie in Ukraine\"/>\n        <link rel=\"canonical\" href=\"https://a-gulinsky.github.io/goit-react-hw-05-movies/movies\" /> */}\n      <Helmet>\n          <title>Movies</title>\n          <meta name=\"description\" content=\"Movies to enjoy your day\"/>\n          <link rel=\"canonical\" href=\"/movies\" />\n      </Helmet>\n\n      <Container>\n\n        <form onSubmit={handleOnSubmit}>\n          <input type=\"text\" name=\"input\" />\n        \n          <button type=\"submit\">Search</button>\n        </form>\n\n        <Ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n\n              <LinkStyled to={`/movies/${movie.id}`} state={{from: location}}>{movie.title}</LinkStyled>\n            </li>\n          ))}\n        </Ul>\n      </Container>\n    </>\n  )\n}\n\nexport default Movies","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMDA3OWJhZDEwZWQxODQ1M2Y2MjZkNWFlYTk4YWI3NCIsInN1YiI6IjY0ZTBiNjBkYWFlYzcxMDNmOTk4MDA4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cZ71jAC2kXZRjWif2pQkTYjmwqMcqAvb4d3kK3-HrX8'\n  }\n};\n\nexport const getTrending = async() => {\n  const responce = await axios.get('/trending/all/day?language=en-US', options)\n  return responce.data\n}\n\nexport const getMovieDetail = async (movieId) => {\n  const responce = await axios.get(`/movie/${movieId}?language=en-US`, options)\n  return responce.data\n}\n\nexport const getMovieInformation = async (movieId,type) => {\n  const responce = await axios.get(`/movie/${movieId}/${type}?language=en-US`, options)\n  return responce.data\n}\n\nexport const getSearchMovie = async (value) => {\n  const responce = await axios.get(`/search/movie?query=${value}&include_adult=false&language=en-US&page=1`, options)\n  return responce.data\n}"],"names":["Container","styled","Ul","LinkStyled","Link","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","location","useLocation","query","get","useEffect","getSearchMovie","response","results","console","log","fetchAPI","name","content","rel","href","onSubmit","e","preventDefault","target","elements","input","value","type","map","movie","to","id","state","from","title","axios","options","method","headers","accept","Authorization","getTrending","responce","data","getMovieDetail","movieId","getMovieInformation"],"sourceRoot":""}