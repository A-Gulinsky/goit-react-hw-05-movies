{"version":3,"file":"static/js/736.3fe51b12.chunk.js","mappings":"qRAEaA,EAAKC,EAAAA,EAAAA,GAAH,mFAMFC,EAAKD,EAAAA,EAAAA,GAAH,iG,SC0Cf,EAzCa,WAEX,OAAuBE,EAAAA,EAAAA,UAAS,IAAhC,eAAOC,EAAP,KAAYC,EAAZ,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAG2BC,EAAAA,EAAAA,IAAoBH,EAAS,WAHxD,OAGUI,EAHV,OAIIL,GAAQ,OAAIK,EAASN,OAJzB,gDAOIO,QAAQC,IAAR,MAPJ,0DAFc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACP,KAGF,SAACN,EAAD,UACGI,EAAKU,KAAI,SAAAC,GAAK,OAEb,UAACb,EAAD,YACE,gBACEc,IAAG,4CAAyCD,EAAME,cAClDC,IAAKH,EAAMI,KACXC,MAAM,MACNC,OAAO,SAET,wBAAKN,EAAMI,SAPJJ,EAAMO,QAFF,KAepB,C,uKC9CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAINC,EAAW,mCAAG,oGACFN,EAAAA,EAAAA,IAAU,mCAAoCC,GAD5C,cACnBM,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKXC,EAAc,mCAAG,WAAO1B,GAAP,uFACLiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,mBAA8CkB,GADzC,cACtBM,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdtB,EAAmB,mCAAG,WAAOH,EAAQ2B,GAAf,uFACVV,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,YAA+B2B,EAA/B,mBAAsDT,GAD5C,cAC3BM,EAD2B,yBAE1BA,EAASC,MAFiB,2CAAH,wDAKnBG,EAAc,mCAAG,WAAOC,GAAP,uFACLZ,EAAAA,EAAAA,IAAA,8BAAiCY,EAAjC,8CAAoFX,GAD/E,cACtBM,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","service/MovieAPI.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Ul = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`\r\n\r\nexport const Li = styled.li`\r\n  width: 300px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`","import { useEffect, useState } from \"react\"\r\n\r\n// API / React Router\r\nimport { useParams } from \"react-router-dom\"\r\nimport { getMovieInformation } from \"service/MovieAPI\"\r\n\r\n// emotion\r\nimport { Ul, Li } from \"./Cast.styled\"\r\n\r\nconst Cast = () => {\r\n\r\n  const [cast,setCast] = useState([])\r\n\r\n  const { movieId } = useParams()\r\n  \r\n  useEffect(() => {\r\n\r\n    async function fetchAPI() {\r\n      \r\n      try {\r\n        const response = await getMovieInformation(movieId, 'credits')\r\n        setCast([...response.cast])\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    fetchAPI()\r\n  }, [movieId])\r\n\r\n  return (\r\n    <Ul>\r\n      {cast.map(actor => (\r\n\r\n        <Li key={actor.cast_id}>\r\n          <img\r\n            src={`${`https://image.tmdb.org/t/p/w300`}${actor.profile_path}`}\r\n            alt={actor.name}\r\n            width=\"100\"\r\n            height=\"150\"\r\n          />\r\n          <h2>{actor.name}</h2>\r\n        </Li>\r\n\r\n      ))}\r\n    </Ul>\r\n  )\r\n}\r\n\r\nexport default Cast","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\r\n\r\nconst options = {\r\n  method: 'GET',\r\n  headers: {\r\n    accept: 'application/json',\r\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxMDA3OWJhZDEwZWQxODQ1M2Y2MjZkNWFlYTk4YWI3NCIsInN1YiI6IjY0ZTBiNjBkYWFlYzcxMDNmOTk4MDA4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.cZ71jAC2kXZRjWif2pQkTYjmwqMcqAvb4d3kK3-HrX8'\r\n  }\r\n};\r\n\r\nexport const getTrending = async() => {\r\n  const responce = await axios.get('/trending/all/day?language=en-US', options)\r\n  return responce.data\r\n}\r\n\r\nexport const getMovieDetail = async (movieId) => {\r\n  const responce = await axios.get(`/movie/${movieId}?language=en-US`, options)\r\n  return responce.data\r\n}\r\n\r\nexport const getMovieInformation = async (movieId,type) => {\r\n  const responce = await axios.get(`/movie/${movieId}/${type}?language=en-US`, options)\r\n  return responce.data\r\n}\r\n\r\nexport const getSearchMovie = async (value) => {\r\n  const responce = await axios.get(`/search/movie?query=${value}&include_adult=false&language=en-US&page=1`, options)\r\n  return responce.data\r\n}"],"names":["Ul","styled","Li","useState","cast","setCast","movieId","useParams","useEffect","getMovieInformation","response","console","log","fetchAPI","map","actor","src","profile_path","alt","name","width","height","cast_id","axios","options","method","headers","accept","Authorization","getTrending","responce","data","getMovieDetail","type","getSearchMovie","value"],"sourceRoot":""}